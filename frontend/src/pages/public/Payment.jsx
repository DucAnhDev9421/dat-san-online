import React, { useState } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import './Payment.css'

function Payment() {
  const navigate = useNavigate()
  const [selectedMethod, setSelectedMethod] = useState('')
  const [showConfirmModal, setShowConfirmModal] = useState(false)
  const [isProcessing, setIsProcessing] = useState(false)
  const [showQRCode, setShowQRCode] = useState(false)

  // Mock booking data - in real app this would come from props/context/API
  const bookingData = {
    venue: 'S√¢n b√≥ng ƒë√° ABC',
    sport: 'B√≥ng ƒë√°',
    date: '25/01/2024',
    time: '18:00 - 20:00',
    duration: 2,
    pricePerHour: 200000,
    subtotal: 400000,
    serviceFee: 20000,
    discount: 0,
    total: 420000
  }

  const paymentMethods = [
    {
      id: 'momo',
      name: 'V√≠ MoMo',
      description: 'Thanh to√°n qua v√≠ ƒëi·ªán t·ª≠ MoMo',
      icon: 'üì±',
      color: '#A50064',
      gradient: 'linear-gradient(135deg, #A50064, #D91C81)'
    },
    {
      id: 'vnpay',
      name: 'VNPay',
      description: 'Thanh to√°n qua c·ªïng VNPay',
      icon: 'üí≥',
      color: '#0071BA',
      gradient: 'linear-gradient(135deg, #0071BA, #0090E3)'
    },
    {
      id: 'cash',
      name: 'Ti·ªÅn m·∫∑t',
      description: 'Thanh to√°n tr·ª±c ti·∫øp t·∫°i s√¢n',
      icon: 'üíµ',
      color: '#22c55e',
      gradient: 'linear-gradient(135deg, #22c55e, #10b981)'
    }
  ]

  const handleMethodSelect = (methodId) => {
    setSelectedMethod(methodId)
  }

  const handlePayment = () => {
    if (!selectedMethod) {
      alert('Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n')
      return
    }
    
    // If MoMo is selected, show QR code option
    if (selectedMethod === 'momo') {
      setShowQRCode(true)
    } else {
      setShowConfirmModal(true)
    }
  }

  const handleQRPayment = () => {
    setShowQRCode(false)
    setShowConfirmModal(true)
  }

  const handleDirectPayment = () => {
    setShowQRCode(false)
    setShowConfirmModal(true)
  }

  const handleConfirmPayment = () => {
    setIsProcessing(true)
    
    // Simulate payment processing
    setTimeout(() => {
      setIsProcessing(false)
      setShowConfirmModal(false)
      
      // Show success message based on payment method
      const method = paymentMethods.find(m => m.id === selectedMethod)
      if (selectedMethod === 'cash') {
        alert(`‚úì ƒê·∫∑t s√¢n th√†nh c√¥ng!\n\nVui l√≤ng thanh to√°n ${bookingData.total.toLocaleString('vi-VN')} VNƒê khi ƒë·∫øn s√¢n.\nCh√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n ƒë·ªÉ x√°c nh·∫≠n.`)
      } else {
        alert(`‚úì ƒêang chuy·ªÉn h∆∞·ªõng ƒë·∫øn ${method.name}...\n\n(Ch·ª©c nƒÉng n√†y s·∫Ω ƒë∆∞·ª£c t√≠ch h·ª£p khi c√≥ Backend)`)
      }
      
      // Redirect to profile/bookings page
      // navigate('/profile')
    }, 2000)
  }

  return (
    <main className="payment-page">
      <div className="container">
        {/* Breadcrumb */}
        <nav className="breadcrumb">
          <Link to="/">Trang ch·ªß</Link>
          <span> / </span>
          <Link to="/booking">ƒê·∫∑t s√¢n</Link>
          <span> / </span>
          <span>Thanh to√°n</span>
        </nav>

        <div className="payment-wrapper">
          {/* Left Side - Payment Methods */}
          <div className="payment-main">
            <div className="payment-header">
              <h1>Thanh to√°n</h1>
              <p>Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n ph√π h·ª£p v·ªõi b·∫°n</p>
            </div>

            {/* Payment Methods */}
            <div className="payment-methods">
              <h3>Ph∆∞∆°ng th·ª©c thanh to√°n</h3>
              <div className="methods-grid">
                {paymentMethods.map(method => (
                  <div
                    key={method.id}
                    className={`method-card ${selectedMethod === method.id ? 'selected' : ''}`}
                    onClick={() => handleMethodSelect(method.id)}
                  >
                    <div className="method-radio">
                      <div className="radio-outer">
                        {selectedMethod === method.id && <div className="radio-inner" />}
                      </div>
                    </div>
                    
                    <div 
                      className="method-icon"
                      style={{ background: method.gradient }}
                    >
                      <span>{method.icon}</span>
                    </div>
                    
                    <div className="method-info">
                      <h4>{method.name}</h4>
                      <p>{method.description}</p>
                    </div>

                    {selectedMethod === method.id && (
                      <div className="method-badge">
                        <span>‚úì</span>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>

            {/* Payment Info based on selected method */}
            {selectedMethod && (
              <div className="payment-info-section">
                {selectedMethod === 'momo' && (
                  <div className="payment-instructions momo-info">
                    <div className="instruction-header">
                      <span className="instruction-icon">üì±</span>
                      <h4>H∆∞·ªõng d·∫´n thanh to√°n MoMo</h4>
                    </div>
                    <ol>
                      <li>B·∫•m "X√°c nh·∫≠n thanh to√°n" ƒë·ªÉ chuy·ªÉn ƒë·∫øn ·ª©ng d·ª•ng MoMo</li>
                      <li>ƒêƒÉng nh·∫≠p v√†o ·ª©ng d·ª•ng MoMo</li>
                      <li>X√°c nh·∫≠n th√¥ng tin giao d·ªãch</li>
                      <li>Nh·∫≠p m√£ PIN ƒë·ªÉ ho√†n t·∫•t thanh to√°n</li>
                    </ol>
                    <div className="info-note">
                      <span>üí°</span>
                      <p>Giao d·ªãch ƒë∆∞·ª£c m√£ h√≥a v√† b·∫£o m·∫≠t tuy·ªát ƒë·ªëi</p>
                    </div>
                  </div>
                )}

                {selectedMethod === 'vnpay' && (
                  <div className="payment-instructions vnpay-info">
                    <div className="instruction-header">
                      <span className="instruction-icon">üí≥</span>
                      <h4>H∆∞·ªõng d·∫´n thanh to√°n VNPay</h4>
                    </div>
                    <ol>
                      <li>B·∫•m "X√°c nh·∫≠n thanh to√°n" ƒë·ªÉ chuy·ªÉn ƒë·∫øn c·ªïng VNPay</li>
                      <li>Ch·ªçn ng√¢n h√†ng ho·∫∑c v√≠ ƒëi·ªán t·ª≠</li>
                      <li>Nh·∫≠p th√¥ng tin th·∫ª/t√†i kho·∫£n</li>
                      <li>X√°c th·ª±c OTP ƒë·ªÉ ho√†n t·∫•t thanh to√°n</li>
                    </ol>
                    <div className="info-note">
                      <span>üîí</span>
                      <p>H·ªó tr·ª£ h∆°n 40 ng√¢n h√†ng v√† v√≠ ƒëi·ªán t·ª≠ t·∫°i Vi·ªát Nam</p>
                    </div>
                  </div>
                )}

                {selectedMethod === 'cash' && (
                  <div className="payment-instructions cash-info">
                    <div className="instruction-header">
                      <span className="instruction-icon">üíµ</span>
                      <h4>Thanh to√°n ti·ªÅn m·∫∑t t·∫°i s√¢n</h4>
                    </div>
                    <ol>
                      <li>B·∫•m "X√°c nh·∫≠n thanh to√°n" ƒë·ªÉ ho√†n t·∫•t ƒë·∫∑t s√¢n</li>
                      <li>B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m√£ ƒë·∫∑t s√¢n qua SMS/Email</li>
                      <li>ƒê·∫øn s√¢n ƒë√∫ng gi·ªù ƒë√£ ƒë·∫∑t</li>
                      <li>Xu·∫•t tr√¨nh m√£ ƒë·∫∑t s√¢n v√† thanh to√°n tr·ª±c ti·∫øp</li>
                    </ol>
                    <div className="info-note warning">
                      <span>‚ö†Ô∏è</span>
                      <p>Vui l√≤ng ƒë·∫øn s·ªõm 10 ph√∫t v√† mang theo ƒë·ªß ti·ªÅn m·∫∑t</p>
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* Payment Action Button */}
            <div className="payment-action">
              <button 
                className={`btn btn-payment ${!selectedMethod ? 'disabled' : ''}`}
                onClick={handlePayment}
                disabled={!selectedMethod}
              >
                {selectedMethod ? 'üîí X√°c nh·∫≠n thanh to√°n' : 'Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n'}
              </button>
            </div>
          </div>

          {/* Right Side - Booking Summary */}
          <div className="payment-sidebar">
            <div className="booking-summary-card">
              <h3>Th√¥ng tin ƒë·∫∑t s√¢n</h3>
              
              <div className="summary-section">
                <div className="venue-header">
                  <div className="venue-icon">üèüÔ∏è</div>
                  <div>
                    <h4>{bookingData.venue}</h4>
                    <p className="sport-type">{bookingData.sport}</p>
                  </div>
                </div>
              </div>

              <div className="summary-divider"></div>

              <div className="summary-section">
                <div className="summary-row">
                  <span className="label">üìÖ Ng√†y:</span>
                  <span className="value">{bookingData.date}</span>
                </div>
                <div className="summary-row">
                  <span className="label">üïê Gi·ªù:</span>
                  <span className="value">{bookingData.time}</span>
                </div>
                <div className="summary-row">
                  <span className="label">‚è±Ô∏è Th·ªùi l∆∞·ª£ng:</span>
                  <span className="value">{bookingData.duration} gi·ªù</span>
                </div>
              </div>

              <div className="summary-divider"></div>

              <div className="summary-section">
                <h4 className="price-title">Chi ti·∫øt gi√°</h4>
                <div className="summary-row">
                  <span className="label">Gi√° thu√™ s√¢n</span>
                  <span className="value">{bookingData.pricePerHour.toLocaleString('vi-VN')} ƒë √ó {bookingData.duration}</span>
                </div>
                <div className="summary-row">
                  <span className="label">T·∫°m t√≠nh</span>
                  <span className="value">{bookingData.subtotal.toLocaleString('vi-VN')} ƒë</span>
                </div>
                <div className="summary-row">
                  <span className="label">Ph√≠ d·ªãch v·ª•</span>
                  <span className="value">{bookingData.serviceFee.toLocaleString('vi-VN')} ƒë</span>
                </div>
                {bookingData.discount > 0 && (
                  <div className="summary-row discount">
                    <span className="label">Gi·∫£m gi√°</span>
                    <span className="value">-{bookingData.discount.toLocaleString('vi-VN')} ƒë</span>
                  </div>
                )}
              </div>

              <div className="summary-divider"></div>

              <div className="summary-total">
                <span className="label">T·ªïng c·ªông</span>
                <span className="value">{bookingData.total.toLocaleString('vi-VN')} ƒë</span>
              </div>

              <div className="security-badge">
                <span className="badge-icon">üõ°Ô∏è</span>
                <div>
                  <strong>Thanh to√°n an to√†n</strong>
                  <p>Th√¥ng tin ƒë∆∞·ª£c m√£ h√≥a SSL</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* QR Code Modal for MoMo */}
        {showQRCode && (
          <div className="modal-overlay" onClick={() => setShowQRCode(false)}>
            <div className="qr-modal" onClick={(e) => e.stopPropagation()}>
              <div className="modal-header">
                <h3>Thanh to√°n MoMo</h3>
                <button 
                  className="close-btn"
                  onClick={() => setShowQRCode(false)}
                >
                  √ó
                </button>
              </div>

              <div className="qr-modal-body">
                <div className="qr-tabs">
                  <div className="qr-tab active">
                    <span className="tab-icon">üì±</span>
                    <div>
                      <h4>Qu√©t m√£ QR</h4>
                      <p>S·ª≠ d·ª•ng app MoMo ƒë·ªÉ qu√©t</p>
                    </div>
                  </div>
                </div>

                <div className="qr-content">
                  <div className="qr-code-wrapper">
                    <div className="qr-code-container">
                      {/* Mock QR Code - In real app, this would be generated from backend */}
                      <div className="qr-code-placeholder">
                        <svg viewBox="0 0 200 200" className="qr-code-svg">
                          {/* QR Code pattern simulation */}
                          <rect x="0" y="0" width="200" height="200" fill="#ffffff"/>
                          
                          {/* Corner markers */}
                          <rect x="10" y="10" width="50" height="50" fill="#000000"/>
                          <rect x="20" y="20" width="30" height="30" fill="#ffffff"/>
                          <rect x="25" y="25" width="20" height="20" fill="#000000"/>
                          
                          <rect x="140" y="10" width="50" height="50" fill="#000000"/>
                          <rect x="150" y="20" width="30" height="30" fill="#ffffff"/>
                          <rect x="155" y="25" width="20" height="20" fill="#000000"/>
                          
                          <rect x="10" y="140" width="50" height="50" fill="#000000"/>
                          <rect x="20" y="150" width="30" height="30" fill="#ffffff"/>
                          <rect x="25" y="155" width="20" height="20" fill="#000000"/>
                          
                          {/* Random QR pattern */}
                          <rect x="70" y="15" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="15" width="8" height="8" fill="#000000"/>
                          <rect x="100" y="15" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="30" width="8" height="8" fill="#000000"/>
                          <rect x="100" y="30" width="8" height="8" fill="#000000"/>
                          <rect x="115" y="30" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="45" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="45" width="8" height="8" fill="#000000"/>
                          <rect x="115" y="45" width="8" height="8" fill="#000000"/>
                          <rect x="15" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="30" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="45" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="100" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="145" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="175" y="70" width="8" height="8" fill="#000000"/>
                          <rect x="15" y="85" width="8" height="8" fill="#000000"/>
                          <rect x="45" y="85" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="85" width="8" height="8" fill="#000000"/>
                          <rect x="115" y="85" width="8" height="8" fill="#000000"/>
                          <rect x="160" y="85" width="8" height="8" fill="#000000"/>
                          <rect x="30" y="100" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="100" width="8" height="8" fill="#000000"/>
                          <rect x="100" y="100" width="8" height="8" fill="#000000"/>
                          <rect x="130" y="100" width="8" height="8" fill="#000000"/>
                          <rect x="175" y="100" width="8" height="8" fill="#000000"/>
                          <rect x="15" y="115" width="8" height="8" fill="#000000"/>
                          <rect x="45" y="115" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="115" width="8" height="8" fill="#000000"/>
                          <rect x="145" y="115" width="8" height="8" fill="#000000"/>
                          <rect x="175" y="115" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="145" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="145" width="8" height="8" fill="#000000"/>
                          <rect x="115" y="145" width="8" height="8" fill="#000000"/>
                          <rect x="145" y="145" width="8" height="8" fill="#000000"/>
                          <rect x="175" y="145" width="8" height="8" fill="#000000"/>
                          <rect x="70" y="160" width="8" height="8" fill="#000000"/>
                          <rect x="100" y="160" width="8" height="8" fill="#000000"/>
                          <rect x="130" y="160" width="8" height="8" fill="#000000"/>
                          <rect x="160" y="160" width="8" height="8" fill="#000000"/>
                          <rect x="85" y="175" width="8" height="8" fill="#000000"/>
                          <rect x="115" y="175" width="8" height="8" fill="#000000"/>
                          <rect x="145" y="175" width="8" height="8" fill="#000000"/>
                          <rect x="175" y="175" width="8" height="8" fill="#000000"/>
                        </svg>
                      </div>
                      <div className="momo-logo-overlay">
                        <div className="momo-logo">M</div>
                      </div>
                    </div>
                    
                    <div className="qr-amount">
                      <span className="amount-label">S·ªë ti·ªÅn thanh to√°n</span>
                      <span className="amount-value">{bookingData.total.toLocaleString('vi-VN')} ƒë</span>
                    </div>
                  </div>

                  <div className="qr-instructions">
                    <h4>üì± H∆∞·ªõng d·∫´n thanh to√°n</h4>
                    <ol>
                      <li>M·ªü ·ª©ng d·ª•ng <strong>MoMo</strong> tr√™n ƒëi·ªán tho·∫°i</li>
                      <li>Ch·ªçn <strong>"Qu√©t m√£ QR"</strong></li>
                      <li>Qu√©t m√£ QR b√™n tr√°i</li>
                      <li>Ki·ªÉm tra th√¥ng tin v√† x√°c nh·∫≠n thanh to√°n</li>
                    </ol>

                    <div className="qr-divider">
                      <span>Ho·∫∑c</span>
                    </div>

                    <button 
                      className="btn btn-momo"
                      onClick={handleDirectPayment}
                    >
                      <span>üì±</span>
                      M·ªü ·ª©ng d·ª•ng MoMo
                    </button>

                    <div className="qr-note">
                      <span>‚è±Ô∏è</span>
                      <p>M√£ QR c√≥ hi·ªáu l·ª±c trong <strong>15 ph√∫t</strong></p>
                    </div>
                  </div>
                </div>

                <div className="qr-footer">
                  <p>üí° N·∫øu ƒë√£ thanh to√°n th√†nh c√¥ng, vui l√≤ng ch·ªù h·ªá th·ªëng x√°c nh·∫≠n (kho·∫£ng 30 gi√¢y)</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Confirmation Modal */}
        {showConfirmModal && (
          <div className="modal-overlay" onClick={() => !isProcessing && setShowConfirmModal(false)}>
            <div className="confirm-modal" onClick={(e) => e.stopPropagation()}>
              <div className="modal-header">
                <h3>X√°c nh·∫≠n thanh to√°n</h3>
                <button 
                  className="close-btn"
                  onClick={() => setShowConfirmModal(false)}
                  disabled={isProcessing}
                >
                  √ó
                </button>
              </div>

              <div className="modal-body">
                <div className="confirm-icon">
                  {paymentMethods.find(m => m.id === selectedMethod)?.icon}
                </div>
                <h4>
                  {paymentMethods.find(m => m.id === selectedMethod)?.name}
                </h4>
                
                <div className="confirm-details">
                  <div className="confirm-row">
                    <span>S√¢n:</span>
                    <strong>{bookingData.venue}</strong>
                  </div>
                  <div className="confirm-row">
                    <span>Ng√†y gi·ªù:</span>
                    <strong>{bookingData.date} - {bookingData.time}</strong>
                  </div>
                  <div className="confirm-row total-row">
                    <span>T·ªïng ti·ªÅn:</span>
                    <strong className="total-price">{bookingData.total.toLocaleString('vi-VN')} ƒë</strong>
                  </div>
                </div>

                {selectedMethod === 'cash' && (
                  <div className="cash-reminder">
                    <span>üí°</span>
                    <p>B·∫°n s·∫Ω thanh to√°n <strong>{bookingData.total.toLocaleString('vi-VN')} ƒë</strong> tr·ª±c ti·∫øp t·∫°i s√¢n</p>
                  </div>
                )}
              </div>

              <div className="modal-actions">
                <button 
                  className="btn btn-outline"
                  onClick={() => setShowConfirmModal(false)}
                  disabled={isProcessing}
                >
                  H·ªßy
                </button>
                <button 
                  className="btn btn-primary"
                  onClick={handleConfirmPayment}
                  disabled={isProcessing}
                >
                  {isProcessing ? (
                    <>
                      <span className="spinner"></span>
                      ƒêang x·ª≠ l√Ω...
                    </>
                  ) : (
                    'X√°c nh·∫≠n'
                  )}
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </main>
  )
}

export default Payment

